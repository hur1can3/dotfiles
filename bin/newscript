#!/bin/bash
#
# pbrisbin 2010
#
# start a new script from a template
#
###

logger() { echo "$(date +'[ %d %b %Y %H:%M ]') :: $*" | tee -a "$log"; }

errorout() { logger "ERROR: $*"; exit 1; }

message() { echo "usage: new [name]"; exit 1; }

check_md5() {
  local mode="$1"
  local _md5="$(md5sum "$2" | awk '{print $1}')"

  case "$mode" in
    set) md5="$_md5"                               ;;
    get) [ "$md5" = "$_md5" ]                      ;;
    *)   errorout 'invalid options to check_md5()' ;;
  esac
}

write_template() {
  local file="$1"

  logger "new: $file..."
  sleep 1

  cat > "$file" << EOF
#!/bin/bash
#
# pbrisbin $(date +%Y)
#
# http://pbrisbin.com:8080/bin/$name
#
###

# utilities
logger() { echo "\$(date +'[ %d %b %Y %H %M ]') :: \$*" | tee -a \$log; }

errorout() { logger "ERROR: \$*"; exit 1; }

message() { echo "usage: $name [args]"; exit 1; }

# constants
log="\$HOME/.logs/$name.log"


EOF

  chmod 754 "$file"
}

bin="$HOME/.bin"
log="$HOME/.logs/newscript.log"

[ ! -d "$bin" ] && errorout "$bin: directory not found"

[ -z "$1" ] && message

name="$(basename "$1")"
script="$bin/$name"

[ -e "$script" ] && errorout "$name: script exists"

write_template "$script" || errorout 'failed creating template'

# set md5 for the unedited script
check_md5 set "$script"

# edit it
${EDITOR:-vim} "$script"

# abort if we didn't change it
if check_md5 get "$script"; then
  logger 'aborted unmodified script'
  rm "$script"
fi
